[tool.commitizen]
name = "cz_customize"
version = "1.2.2"
tag_format = "v$version"
update_changelog_on_bump = true
changelog_incremental = false
version_files = [
    "pyproject.toml:version"
]

[tool.commitizen.customize]
bump_pattern = "^(BREAKING|feat|fix|refactor|perf|new|patch)"
bump_map = { "BREAKING" = "MAJOR", "feat" = "MINOR", "fix" = "PATCH", "refactor" = "PATCH", "perf" = "PATCH", "new" = "MINOR", "patch" = "PATCH" }
change_type_order = ["BREAKING CHANGE", "feat", "fix", "refactor", "perf"]
commit_parser = "^(?P<change_type>feat|fix|refactor|perf|docs|style|test|build|ci|chore|BREAKING CHANGE)(?:\\((?P<scope>[^)\r\n]+)\\))?: (?P<message>[^\n]+)"
message_template = """{{ prefix }}{% if scope %}({{ scope }}){% endif %}: {{ subject }} \
{% if body or is_breaking_change %}\n\n{% endif %} \
{% if is_breaking_change %}BREAKING CHANGE: {{subject}}\n\n{% endif %} \
{% if body %}{{ body }}{% endif %} \
{% if footer %}\n\nCloses: {{ footer }}{% endif %}"""

[tool.commitizen.customize.change_type_map]
feat = "Feature"
fix = "Fix"
refactor = "Refactor"
perf = "Performance"
docs = "Docs"
style = "Style"
test = "Tests"
build = "Build"
ci = "CI"
chore = "Misc"
"BREAKING CHANGE" = "Breaking changes"

[[tool.commitizen.customize.questions]]
type = "list"
name = "prefix"
message = "Select the type of change you are committing:"
choices = [
    { value = "fix", name = "fix: a bug fix." },
    { value = "feat", name = "feat: a new feature." },
    { value = "docs", name = "docs: documentation-only changes."},
    { value = "style", name = "style: whitespace, formatting, etc." },
    { value = "refactor", name = "refactor: neither fixes a bug nor adds a feature." },
    { value = "perf", name = "perf: improves performance."},
    { value = "test", name = "test: adds or fixes tests." },
    { value = "build", name = "build: changes in build systems (e.g. pip or docker)." },
    { value = "ci", name = "ci: changes in CI systems (e.g. github actions)."},
    { value = "chore", name = "chore: miscellaneous tasks like tidying up files." },
    { value = "new", name = "new: for bumping minor version without feat commits." },
    { value = "patch", name = "patch: for bumping patch version without fix commits."},
]

[[tool.commitizen.customize.questions]]
type = "confirm"
name = "is_breaking_change"
message = "Is this a BREAKING CHANGE?"
default = false

[[tool.commitizen.customize.questions]]
type = "input"
name = "scope"
message = "What is the scope of this change? (press [enter] to skip)"

[[tool.commitizen.customize.questions]]
type = "input"
name = "subject"
message = "Write a short and imperative summary of the code changes: (lower case and no period)"

[[tool.commitizen.customize.questions]]
type = "input"
name = "footer"
message = "What issues does this commit close? (press [enter] to skip)"

[[tool.commitizen.customize.questions]]
type = "input"
name = "body"
message = "Provide additional contextual information about the commit, particularly any breaking changes: (press [enter] to skip)"
